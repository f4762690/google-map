/** 谷歌地图 **/
// require('babel-polyfill')
import Vue from 'vue'
import App from './App'
import gps from './lib/Gps'
import config from './config'
import update from './Update'
import router from './router'
import Router from 'vue-router'
import VueJsonp from 'vue-jsonp'
import store from './store/store'
import {copy} from './lib/Clipboard'
import btn from './components/btn.vue'
import VueResource from 'vue-resource'
import touch from './components/touch.vue'
import message from './package/message/main'
import MapBox from './components/MapBox.vue'
import map_btn from './components/map_btn.vue'
import {SyncConfig,ConfigGet} from './lib/ToFile'
import GoogleMap from './components/GoogleMap.vue'
import {addQuickKey, removeQuickKey} from './lib/QuickKey'
import {getDisance,converPositionToList} from './lib/ConverPoint'

Vue.config.productionTip = false

Vue.use(Router)
Vue.use(VueJsonp)
Vue.use(VueResource)
Vue.component('btn',btn)
Vue.component('touch',touch)
Vue.component('map_btn',map_btn)

Vue.prototype.$gps = gps
Vue.prototype.$alert = message
Vue.prototype.$ClipboardCopy = copy
Vue.prototype.$getDisance = getDisance
Vue.prototype.$addQuickKey = addQuickKey
Vue.prototype.$removeQuickKey = removeQuickKey
Vue.prototype.$ConverPoint = converPositionToList

window.openurl = function(url){
    if(window.isSafari)
    {
        try{
            external.NewWindow(url)
        }catch(e){}
    }else{
        try{
            NewWindow(url)
        }catch(e){}
    }
}

window.isSafari = navigator.userAgent.indexOf("AppleWebKit") > -1 && navigator.userAgent.indexOf("Chrome") < 1;

//如果没有历史定位，获取谷歌api位置
const locationInit = ()=>{
    let _data;
    let _oAjax = new XMLHttpRequest();
    _oAjax.open('POST', 'https://www.googleapis.com/geolocation/v1/geolocate?key='+window.google_api_key, false);//false表示同步请求
    _oAjax.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
    _oAjax.onreadystatechange = function() {
        if (_oAjax.readyState == 4 && _oAjax.status == 200) {
            _data = JSON.parse(_oAjax.responseText);
        }
    };
    try{
        _oAjax.send('')
    }catch(error){}
    /*如果没有历史定位信息，取谷歌api真实地理位置*/
    if (_data != undefined && _data.hasOwnProperty('location') && _data.location.hasOwnProperty('lat')) {
        store.commit('setMyLocation',{
            lat: _data.location.lat,
            lng: _data.location.lng
        })
    }else{
        store.commit('setMyLocation', {
            lat: -33.8688,
            lng: 151.2195
        })
    }
}

/**
跳转到这个地址
**/
window.NativeSimulateLocationTo = function(lat, lng){
    if(window.isSafari){
        return external.SimulateLocationTo(lat, lng);
    }
    return window.SimulateLocationTo(lat, lng);
}

/**
关闭虚拟定位
**/
window.NativeStopSimulation = function()
{
    if(window.isSafari)
    {
        return external.StopSimulation();
    }
    return window.StopSimulation();
}

window.storeCommit = store.commit

/*处理版本*/
if(window.isSafari)
{
    checkVersion(10000);
}else{
    try{
        setMsgCallback('GetClientVersion',(data)=>{
            data = eval('('+data+')');
            checkVersion(data.version);
        });
        window.GetClientVersion();
    }catch(e)
    {
        if(!window.hasOwnProperty('setMsgCallback'))
        {
            checkVersion(0);
        }
    }
}
/*低版本跳到更新说明页面,mac版例外*/
function checkVersion(version)
{
    let __isnew = false;

    /*mac版或者开发环境跳过*/
    if(true == window.isSafari || true == window.isDEV || true == window.ISANDROID)
    {
        __isnew = true;
    }else{
        if(version >= 4368)
        {
            __isnew = true;
        }
    }

    if(!__isnew){
        new Vue({
          el: '#app',
          components: { update },
          template: '<update/>'
        })
    }
}

/* google map */
function gotoGoogleMap()
{
    Vue.component('mymap',GoogleMap)
    new Vue({
        el: '#app',
        store,
        components: { App },
        template: '<App/>'
    })
}

/*mapbox*/
function gotoMapBox(){
    Vue.component('mymap',MapBox)
    new Vue({
        el: '#app',
        store,
        components: { App },
        template: '<App/>'
    })
}

//我的位置
ConfigGet('my_location',(res)=>{
    let _loc = {}
    try{
        _loc = JSON.parse(res)
    }catch(error){}
    if(/^-*\d+.\d+$/.test(_loc.lng) && /^-*\d+.\d+$/.test(_loc.lat))
    {
        _loc.lat = parseFloat(_loc.lat)
        _loc.lng = parseFloat(_loc.lng)
        store.commit('setMyLocation',_loc)
    }else{
        locationInit()
    }
    if(window.mapType == 'mapbox'){
        gotoMapBox();
    }else{
        gotoGoogleMap();
    }
},()=>{
    locationInit()
    if(window.mapType == 'mapbox'){
        gotoMapBox();
    }else{
        gotoGoogleMap();
    }
});

